services:
   frontend:
      container_name: frontend
      build:
         context: Frontend-Dashboard
         dockerfile: frontend.dockerfile
      ports:
         - "8002:80"
      restart: always
      networks:
         - frontend_net
      profiles:
         - frontend
         - stack

   backend:
      container_name: backend
      build:
         context: backend
         dockerfile: backend.dockerfile
      ports:
         - "8009:8009"
      restart: always
      volumes:
         - ./backend/:/usr/src/app
      networks:
         - backend_net

   middleware:
      container_name: websocket
      image: neomagic100/pi-hole-dashboard:middleware
      env_file:
         - websockets/.env
      ports:
         - "8008:8008"
      restart: on-failure
      networks:
         - backend_net
      profiles:
         - backend
         - stack
         - prod
   
   middleware-dev:
      container_name: websocket
      build:
         context: websockets
         dockerfile: middleware.dockerfile
      env_file:
         - websockets/.env
      ports:
         - "8008:8008"
      restart: on-failure
      networks:
         - backend_net
      profiles:
         - backend
         - dev
         - stack

   db:
      container_name: db
      image: mysql:latest
      restart: always
      environment:
         MYSQL_DATABASE: "pihole"
         MYSQL_USER: "user"
         MYSQL_PASSWORD: "password"
         MYSQL_ROOT_PASSWORD: "password"
      ports:
         - "3306:3306"
      volumes:
         - DB_DATA:/var/lib/mysql
         - ./db:/docker-entrypoint-initdb.d
   
   watchtower:
      container_name: watchtower
      image: containrrr/watchtower
      restart: always
      volumes:
         - /var/run/docker.sock:/var/run/docker.sock
         - ./config.json:/config.json
      command: --interval 30
      profiles:
         - backend
         - stack
         - prod
networks:
   backend_net:
      driver: bridge
   frontend_net:
      driver: bridge

volumes:
   DB_DATA:
